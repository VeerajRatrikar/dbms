###LIBRARY MANAGEMENT SYSTEM

#Primary key : Uniquely identifiable elements
#Foreign Key: To maintain redundancy
1)Book:Book ID,TITLE,PUBLISHER_NAME,PUB_YEAR
2)Book authors:BOOK ID,AUTHOR_NAME
3)Publisher:PUBLISHER_NAME,ADDRESS,PHONE
4)Book_Copies:BOOK_ID,BRANCH_ID,NO_OF_COPIES
5)Book_Lending:BOOK_ID,BRANCH_ID,CARD_NO,DATE OUT,DUE DATE
6)Library_Branch:BRANCH_ID,BRANCH_NAME,ADDRESS
7)Card:CARD_NO

->CREATE TABLE PUBLISHER(NAME VARCHAR2 (20)PRIMARY KEY,PHONE INTEGER,ADDRESS VARCHAR(20));
->CREATE TABLE BOOK(BOOK_ID INTEGER PRIMARY KEY,TITLE VARCHAR2 (20),PUB_YEAR VARCHAR2(20),PUBLISHER_NAME REFERENCES PUBLISHER(NAME) ON DELETE CASCADE);
->CREATE TABLE BOOK_AUTHORS(AUTHOR_NAME VARCHAR2(20),BOOK_ID REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,PRIMARY KEY(BOOK_ID,AUTHOR_NAME));
->CREATE TABLE LIBRARY_BRANCH(BRANCH_ID INTEGER PRIMARY KEY,BRANCH_NAME VARCHAR(50),ADDRESS VARCHAR(50));
->CREATE TABLE BOOK_COPIES(NO_OF_COPIES INTEGER,BOOK_ID REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,BRANCH_ID REFERENCES LIBRARY_BRANCH(BRANCH_ID) ON DELETE CASCADE,PRIMARY KEY(BOOK_ID,BRANCH_ID));
->CREATE TABLE CARD(CARD_NO INTEGER PRIMARY KEY);
->CREATE TABLE BOOK_LENDING(BOOK_ID REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,BRANCH_ID REFERENCES LIBRARY_BRANCH(BRANCH_ID) ON DELETE CASCADE,CARD_NO REFERENCES CARD(CARD_NO),DATE_OUT DATE,DUE_DATE DATE,PRIMARY KEY(BOOK_ID,BRANCH_ID,CARD_NO));


drop table table_name cascades constraints;
select * from table_name;
desc table_name;
create table(var_name datatype);
insert into table_name('value1 ','value2','value3');
select value1 from table_name;
update table_name set value='new value' where value='value';
ex: update student set section='d' where usn='1';
alter table table_name add var_name datatype;
delete from table_name where value='';
delete table table_name;


INSERT:
insert into PUBLISHER values('kid','6438393873','BANGALORE');
insert into PUBLISHER values('&name',&phone,'&address');

insert into BOOK values(&BOOK_ID,'&TITLE','&PUB_YEAR','&PUBLISHER_NAME');
insert into BOOK_AUTHORS values('&AUTHOR_NAME',&BOOK_ID);
insert into LIBRARY_BRANCH VALUES(&BRANCH_ID,'&BRANCH_NAME','&ADDRESS');
insert into BOOK_COPIES VALUES(&NO_OF_COPIES,&BOOK_ID,&BRANCH_ID);
insert into CARD VALUES (&CARD_NO);
insert into BOOK_LENDING VALUES(&BOOK_ID,&BRANCH_ID,&CARD_NO,'&DATE_OUT','&DUE_DATE');

a)data retrieval query
SELECT B.BOOK_ID,B.TITLE,P.PUBLISHER_NAME,A.AUTHOR_NAME,C.NO_OF_COPIES FROM BOOK B , PUBLISHER P, BOOK_AUTHORS A,BOOK_COPIES C , LIBRARY BRANCH L WHERE
  B.BOOK_ID=C.BOOK_ID AND B.PUBLISHER_NAME=P.NAME AND C.BOOK_ID = L.BRANCH_ID;

b)get the particulars of borrowers whohave borrowed more than 3 book,but from Jan2017 to June2017
SELECT CARD_NO FROM BOOK_LENDING WHERE DATE_OUT BETWEEN "JAN 2017" AND "JUNE 2017" GROUP BY CARD_NO HAVING COUNT(*)>3;

C)DELETE A BOOK IN BOOK TABLE . UPDATE THE CONTENTS OF OTHER TABLES TO REFLECT TEHIR DATA MANIPULATION OPERATION
DELETE FROM BOOK WHERE BOOK_ID=5;

D) PARTITION THE BOOK TABLE BASED ON YEAR OF PUBLICATION . DEMONSTRATE ITS WORKING WITH A SIMPLE QUERY
CREATE VIEW PUB_NAME AS SELECT PUB_YEAR FROM BOOK;

E)



A)SELECT B.BOOK_ID, B.TITLE, P.NAME, A.AUTHOR_NAME,C.NO_OF_COPIES FROM BOOK B,PUBLISHER P,BOOK_AUTHORS A,BOOK_COPIES C,LIBRARY_BRANCH L WHERE B.BOOK_ID = C.BOOK_ID AND B.PUBLISHER_NAME = P.NAME AND C.BOOK_ID = A.BOOK_ID  AND C.BRANCH_ID = L.BRANCH_ID; 
B)SELECT CARD_NO 
FROM BOOK_LENDING 
WHERE DATE_OUT BETWEEN TO_DATE('01-JAN-2017', 'DD-MON-YYYY') 
                    AND TO_DATE('30-JUN-2017', 'DD-MON-YYYY')
GROUP BY CARD_NO 
HAVING COUNT(*) > 3;

